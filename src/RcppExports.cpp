// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

// rcpparma_hello_world
arma::mat rcpparma_hello_world();
RcppExport SEXP medBSA_rcpparma_hello_world() {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    __result = Rcpp::wrap(rcpparma_hello_world());
    return __result;
END_RCPP
}
// rcpparma_outerproduct
arma::mat rcpparma_outerproduct(const arma::colvec& x);
RcppExport SEXP medBSA_rcpparma_outerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    __result = Rcpp::wrap(rcpparma_outerproduct(x));
    return __result;
END_RCPP
}
// rcpparma_innerproduct
double rcpparma_innerproduct(const arma::colvec& x);
RcppExport SEXP medBSA_rcpparma_innerproduct(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    __result = Rcpp::wrap(rcpparma_innerproduct(x));
    return __result;
END_RCPP
}
// rcpparma_bothproducts
Rcpp::List rcpparma_bothproducts(const arma::colvec& x);
RcppExport SEXP medBSA_rcpparma_bothproducts(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::colvec& >::type x(xSEXP);
    __result = Rcpp::wrap(rcpparma_bothproducts(x));
    return __result;
END_RCPP
}
// column_picker_Rcpp
Rcpp::NumericVector column_picker_Rcpp(Rcpp::NumericMatrix M, Rcpp::IntegerVector v);
RcppExport SEXP medBSA_column_picker_Rcpp(SEXP MSEXP, SEXP vSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< Rcpp::NumericMatrix >::type M(MSEXP);
    Rcpp::traits::input_parameter< Rcpp::IntegerVector >::type v(vSEXP);
    __result = Rcpp::wrap(column_picker_Rcpp(M, v));
    return __result;
END_RCPP
}
// normalize_rowsCpp
arma::mat normalize_rowsCpp(arma::mat M);
RcppExport SEXP medBSA_normalize_rowsCpp(SEXP MSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type M(MSEXP);
    __result = Rcpp::wrap(normalize_rowsCpp(M));
    return __result;
END_RCPP
}
// get_BCL_probs_Cpp
arma::mat get_BCL_probs_Cpp(arma::mat des_m, arma::mat coef_m);
RcppExport SEXP medBSA_get_BCL_probs_Cpp(SEXP des_mSEXP, SEXP coef_mSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat >::type des_m(des_mSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coef_m(coef_mSEXP);
    __result = Rcpp::wrap(get_BCL_probs_Cpp(des_m, coef_m));
    return __result;
END_RCPP
}
// expit_double
double expit_double(double x);
RcppExport SEXP medBSA_expit_double(SEXP xSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< double >::type x(xSEXP);
    __result = Rcpp::wrap(expit_double(x));
    return __result;
END_RCPP
}
// ll_logisticReg
arma::vec ll_logisticReg(arma::vec& out_v, arma::vec& coef_v, arma::mat& des_m);
RcppExport SEXP medBSA_ll_logisticReg(SEXP out_vSEXP, SEXP coef_vSEXP, SEXP des_mSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec& >::type out_v(out_vSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type coef_v(coef_vSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type des_m(des_mSEXP);
    __result = Rcpp::wrap(ll_logisticReg(out_v, coef_v, des_m));
    return __result;
END_RCPP
}
// ll_BCLReg_Cpp
arma::vec ll_BCLReg_Cpp(arma::vec& out_v, arma::mat coef_m, arma::mat& des_m);
RcppExport SEXP medBSA_ll_BCLReg_Cpp(SEXP out_vSEXP, SEXP coef_mSEXP, SEXP des_mSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec& >::type out_v(out_vSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coef_m(coef_mSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type des_m(des_mSEXP);
    __result = Rcpp::wrap(ll_BCLReg_Cpp(out_v, coef_m, des_m));
    return __result;
END_RCPP
}
// ll_U_Cpp
arma::vec ll_U_Cpp(arma::vec U, arma::mat XmatU, arma::vec coef_U);
RcppExport SEXP medBSA_ll_U_Cpp(SEXP USEXP, SEXP XmatUSEXP, SEXP coef_USEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type U(USEXP);
    Rcpp::traits::input_parameter< arma::mat >::type XmatU(XmatUSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type coef_U(coef_USEXP);
    __result = Rcpp::wrap(ll_U_Cpp(U, XmatU, coef_U));
    return __result;
END_RCPP
}
// ll_M_Cpp
arma::vec ll_M_Cpp(arma::vec& M, arma::mat& XmatM, arma::mat coef_M);
RcppExport SEXP medBSA_ll_M_Cpp(SEXP MSEXP, SEXP XmatMSEXP, SEXP coef_MSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec& >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type XmatM(XmatMSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coef_M(coef_MSEXP);
    __result = Rcpp::wrap(ll_M_Cpp(M, XmatM, coef_M));
    return __result;
END_RCPP
}
// ll_Y_Cpp
arma::vec ll_Y_Cpp(arma::vec Y, arma::mat XmatY, arma::vec coef_Y);
RcppExport SEXP medBSA_ll_Y_Cpp(SEXP YSEXP, SEXP XmatYSEXP, SEXP coef_YSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::vec >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type XmatY(XmatYSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type coef_Y(coef_YSEXP);
    __result = Rcpp::wrap(ll_Y_Cpp(Y, XmatY, coef_Y));
    return __result;
END_RCPP
}
// get_pU1_Cpp
arma::vec get_pU1_Cpp(arma::mat& XmatM_U0, arma::mat& XmatM_U1, arma::mat coef_M, arma::vec& M, arma::mat& XmatY_U0, arma::mat& XmatY_U1, arma::vec coef_Y, arma::vec& Y, arma::mat& XmatU, arma::vec coef_U);
RcppExport SEXP medBSA_get_pU1_Cpp(SEXP XmatM_U0SEXP, SEXP XmatM_U1SEXP, SEXP coef_MSEXP, SEXP MSEXP, SEXP XmatY_U0SEXP, SEXP XmatY_U1SEXP, SEXP coef_YSEXP, SEXP YSEXP, SEXP XmatUSEXP, SEXP coef_USEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< arma::mat& >::type XmatM_U0(XmatM_U0SEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type XmatM_U1(XmatM_U1SEXP);
    Rcpp::traits::input_parameter< arma::mat >::type coef_M(coef_MSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type M(MSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type XmatY_U0(XmatY_U0SEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type XmatY_U1(XmatY_U1SEXP);
    Rcpp::traits::input_parameter< arma::vec >::type coef_Y(coef_YSEXP);
    Rcpp::traits::input_parameter< arma::vec& >::type Y(YSEXP);
    Rcpp::traits::input_parameter< arma::mat& >::type XmatU(XmatUSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type coef_U(coef_USEXP);
    __result = Rcpp::wrap(get_pU1_Cpp(XmatM_U0, XmatM_U1, coef_M, M, XmatY_U0, XmatY_U1, coef_Y, Y, XmatU, coef_U));
    return __result;
END_RCPP
}
// calc_ARD_old_Cpp
double calc_ARD_old_Cpp(const arma::mat& coef_M, const arma::mat& Z, const arma::vec& U, const arma::vec& coef_Y, bool intx);
RcppExport SEXP medBSA_calc_ARD_old_Cpp(SEXP coef_MSEXP, SEXP ZSEXP, SEXP USEXP, SEXP coef_YSEXP, SEXP intxSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const arma::mat& >::type coef_M(coef_MSEXP);
    Rcpp::traits::input_parameter< const arma::mat& >::type Z(ZSEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type U(USEXP);
    Rcpp::traits::input_parameter< const arma::vec& >::type coef_Y(coef_YSEXP);
    Rcpp::traits::input_parameter< bool >::type intx(intxSEXP);
    __result = Rcpp::wrap(calc_ARD_old_Cpp(coef_M, Z, U, coef_Y, intx));
    return __result;
END_RCPP
}
